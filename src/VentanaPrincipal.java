
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Javi
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAbrir = new javax.swing.JDialog();
        jFileChooserAbrir = new javax.swing.JFileChooser();
        jDialogGuardar = new javax.swing.JDialog();
        jFileChooserGuardar = new javax.swing.JFileChooser();
        jTextAreaEscritura = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        GuardarComo = new javax.swing.JMenuItem();

        jDialogAbrir.setSize(new java.awt.Dimension(723, 420));

        javax.swing.GroupLayout jDialogAbrirLayout = new javax.swing.GroupLayout(jDialogAbrir.getContentPane());
        jDialogAbrir.getContentPane().setLayout(jDialogAbrirLayout);
        jDialogAbrirLayout.setHorizontalGroup(
            jDialogAbrirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooserAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
        );
        jDialogAbrirLayout.setVerticalGroup(
            jDialogAbrirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooserAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        jDialogGuardar.setSize(new java.awt.Dimension(723, 420));

        javax.swing.GroupLayout jDialogGuardarLayout = new javax.swing.GroupLayout(jDialogGuardar.getContentPane());
        jDialogGuardar.getContentPane().setLayout(jDialogGuardarLayout);
        jDialogGuardarLayout.setHorizontalGroup(
            jDialogGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogGuardarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooserGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogGuardarLayout.setVerticalGroup(
            jDialogGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogGuardarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooserGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreaEscritura.setColumns(20);
        jTextAreaEscritura.setRows(5);

        jMenu1.setText("File");

        Abrir.setText("Abrir");
        Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AbrirMousePressed(evt);
            }
        });
        jMenu1.add(Abrir);

        Guardar.setText("Guardar");
        Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GuardarMousePressed(evt);
            }
        });
        jMenu1.add(Guardar);

        GuardarComo.setText("Guardar como..");
        GuardarComo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GuardarComoMousePressed(evt);
            }
        });
        jMenu1.add(GuardarComo);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addComponent(jTextAreaEscritura, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(jTextAreaEscritura, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AbrirMousePressed
        int seleccion = jFileChooserAbrir.showOpenDialog(this);  // indica cual fue la accion de usuario sobre el jfilechooser
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = jFileChooserAbrir.getSelectedFile(); // obtiene el archivo seleccionado
            StringBuilder lectura = new StringBuilder(); //creo un StringBuilder para guardar las lineas que se leen en el while
            String nombre = fichero.getName(); //obtengo el nombre del archivo completo para comprobar su extension
            String extension = nombre.substring(nombre.lastIndexOf('.') + 1, nombre.length()); //separo la extension del nombre para usarla en el if
            if (extension.equalsIgnoreCase("txt") || extension.equalsIgnoreCase("xml")) { //solo si la extension es xml o txt entrara en el try
                try {
                    BufferedReader br = new BufferedReader(new FileReader(fichero));
                    String linea = br.readLine();
                    while (linea != null) {
                        lectura.append(linea).append("\n"); //le voy a침adiendo las lineas con salto de linea
                        linea = br.readLine();
                    }
                    String resul = lectura.toString(); //cambio el StringBuilder a String para pasarselo al textArea
                    jTextAreaEscritura.setText(resul);
                    br.close();
                } catch (FileNotFoundException e) {
                    jTextAreaEscritura.setText("Fichero no encontrado");
                } catch (Exception e) {
                    jTextAreaEscritura.setText("Error en la lectura del fichero");
                }
            } else {
                jTextAreaEscritura.setText("Extensi칩n del archivo no v치lida");
            }
        }else {
            jFileChooserAbrir.cancelSelection();
        }


    }//GEN-LAST:event_AbrirMousePressed

    private void GuardarComoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarComoMousePressed
        int seleccion = jFileChooserGuardar.showSaveDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {             //si entra aqui es pq el usuario ha pulsado en "guardar"
            File fichero = jFileChooserGuardar.getSelectedFile();
            String nombre = fichero.getName();                   //creo una variable que recibe el nombre del fichero
            String extension = nombre.substring(nombre.lastIndexOf('.') + 1, nombre.length()); //creo una variable con la extension del fichero

            String texto = jTextAreaEscritura.getText(); //creo una variable que guarda el texto
            if (extension.equalsIgnoreCase("txt") || extension.equalsIgnoreCase("xml")) { //con la variable que guarda la extension entro en el if para que 
                //solo se guarden los archivos txt y xml
                try {
                    BufferedWriter bw = new BufferedWriter(new FileWriter(fichero));
                    bw.write(texto);
                    bw.close();
                } catch (IOException e) {
                    jTextAreaEscritura.setText("Error en la escritura del fichero");
                }
            } else {
                jTextAreaEscritura.setText("Extension no v치lida");
            }
        } else {
            jFileChooserGuardar.cancelSelection();
        }


    }//GEN-LAST:event_GuardarComoMousePressed

    private void GuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarMousePressed
        
            File fichero = jFileChooserAbrir.getSelectedFile();
            String archivo = fichero.getPath();
            String texto = jTextAreaEscritura.getText();
            try {
                BufferedWriter bw = new BufferedWriter(new FileWriter(archivo));
                bw.write(texto);
                bw.close();
            } catch (IOException e) {
                jTextAreaEscritura.setText("Error en la escritura del fichero");
            }
    }//GEN-LAST:event_GuardarMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem GuardarComo;
    private javax.swing.JDialog jDialogAbrir;
    private javax.swing.JDialog jDialogGuardar;
    private javax.swing.JFileChooser jFileChooserAbrir;
    private javax.swing.JFileChooser jFileChooserGuardar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextArea jTextAreaEscritura;
    // End of variables declaration//GEN-END:variables
}
